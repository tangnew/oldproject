<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC
        "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
        "http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">

<hibernate-mapping package="com.army.building">

	<class name="Group" table="T_GROUP">
		<id name="id">
			<generator class="increment" />
		</id>
		<property name="name" />
		<set name="persons" cascade="all" lazy="false" inverse="false"><!--inverse=true的含义: 
				由双向关联另一方维护该关联,己方不维护该关联(只能进行查询操作)。; inverse='false'：控制权由1负责 inverse="true"表示放弃关联关系 -->
			<key column="groupId" />
			<one-to-many class="ContactPerson" />
		</set>
	</class>

	<class name="ContactPerson" table="t_contact_person">
		<id name="id">
			<generator class="increment"></generator>
		</id>
		<property name="age" />
		<property name="name" />
		<many-to-one name="group" column="groupId" class="Group"
			cascade="all" />
	</class>
</hibernate-mapping>
<!-- 二、Inverse和Cascade的比较 Inverse：负责控制关系，默认为false，也就是关系的两端都能控制，但这样会造成一些问题，更新的时候会因为两端都控制关系，于是重复更新。一般来说有一端要设为true。 
	Cascade：负责控制关联对象的级联操作，包括更新、删除等，也就是说对一个对象进行更新、删除时，其它对象也受影响，比如我删除一个对象，那么跟它是多对一关系的对象也全部被删除。 
	举例说明区别：删除“一”那一端一个对象O的时候，如果“多”的那一端的Inverse设为true，则把“多”的那一端所有与O相关联的对象外键清空；如果“多”的那一端的Cascade设为Delete，则把“多”的那一端所有与O相关联的对象全部删除。 -->